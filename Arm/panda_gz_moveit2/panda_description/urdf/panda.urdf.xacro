<?xml version="1.0"?>
<!-- URDF for Franka Emika Panda -->
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">
  <xacro:property name="scale" default="1 1 1"/>

  <!--                   -->
  <!-- Imported elements -->
  <!--                   -->
  <xacro:include filename="$(find panda_description)/urdf/panda_arm.xacro"/>
  <xacro:include filename="$(find panda_description)/urdf/panda_gripper.xacro"/>
  <xacro:include filename="$(find panda_description)/urdf/panda_utils.xacro"/>
  <xacro:include filename="$(find panda_description)/urdf/panda.gazebo"/>


  <!--            -->
  <!-- Parameters -->
  <!--            -->
  <!-- Name of the robot (mandatory) -->
  <xacro:arg name="name" default="panda"/>
  <!-- Prefix for all entities -->
  <xacro:arg name="prefix" default="$(arg name)_"/>

  <!-- Flag to enable default gripper -->
  <xacro:arg name="gripper" default="true"/>

  <!-- Flag to enable collision geometry for manipulator's arm -->
  <xacro:arg name="collision_arm" default="true"/>
  <!-- Flag to enable collision geometry for manipulator's gripper (hand and fingers) -->
  <xacro:arg name="collision_gripper" default="true"/>

  <!-- Flag to enable safety limits controllers on manipulator joints -->
  <xacro:arg name="safety_limits" default="false"/>
  <!-- Lower and upper margin for position limits of all safety controllers -->
  <xacro:arg name="safety_position_margin" default="0.17453293"/>
  <!-- Parametric k-position factor of all safety controllers -->
  <xacro:arg name="safety_k_position" default="100.0"/>
  <!-- Parametric k-velocity factor of all safety controllers -->
  <xacro:arg name="safety_k_velocity" default="40.0"/>

  <!-- Flag to enable ros2 controllers for manipulator -->
  <xacro:arg name="ros2_control" default="true"/>
  <!-- The ros2_control plugin that should be loaded for the manipulator ('fake', 'gz', 'real' or custom) -->
  <xacro:arg name="ros2_control_plugin" default="gz"/>
  <!-- The output control command interface provided by ros2_control ('position', 'velocity', 'effort' or certain combinations 'position,velocity') -->
  <xacro:arg name="ros2_control_command_interface" default="effort"/>
  <!-- The filepath to parameters of ROS 2 controllers -->
  <xacro:arg name="ros2_controller_parameters" default="$(find panda_moveit_config)/config/controllers_$(arg ros2_control_command_interface).yaml"/>

  <!-- Flag to preserve fixed joints and prevent lumping when generating SDF for Gazebo -->
  <xacro:arg name="gazebo_preserve_fixed_joint" default="false"/>


  <!--            -->
  <!-- Properties -->
  <!--            -->
  <!-- Prefixes -->
  <xacro:property name="prefix_arm" value="$(arg prefix)"/>
  <xacro:property name="prefix_gripper" value="$(arg prefix)"/>

  <!-- Origin of arm in the world -->
  <xacro:property name="world_name" value="world"/>
  <xacro:property name="origin_xyz" value="0 0 0"/>
  <xacro:property name="origin_rpy" value="0 0 0"/>

  <!-- Offset of gripper with respect to wrist flange -->
  <xacro:property name="gripper_offset_xyz" value="0 0 0"/>
  <xacro:property name="gripper_offset_rpy" value="0 0 0"/>


  <!--       -->
  <!-- Robot -->
  <!--       -->
  <!-- Dummy world link that the robot is fixed to -->
  <xacro:panda_dummy_link
    link_name="${world_name}"
    gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
   scale="${scale}"/>

  <!-- Arm -->
  <xacro:panda_arm
    base_parent="world"
    prefix="${prefix_arm}"
    origin_xyz="${origin_xyz}"
    origin_rpy="${origin_rpy}"
    collision="$(arg collision_arm)"
    safety_limits="$(arg safety_limits)"
    safety_position_margin="$(arg safety_position_margin)"
    safety_k_position="$(arg safety_k_position)"
    safety_k_velocity="$(arg safety_k_velocity)"
    ros2_control="$(arg ros2_control)"
    ros2_control_plugin="$(arg ros2_control_plugin)"
    ros2_control_command_interface="$(arg ros2_control_command_interface)"
    gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
    scale="${scale}"/>

  <!-- Gripper -->
  <xacro:if value="$(arg gripper)">
    <xacro:panda_gripper
      wrist_flange="${prefix_arm}${wrist_flange_name}"
      prefix="${prefix_gripper}"
      origin_xyz="${gripper_offset_xyz}"
      origin_rpy="${gripper_offset_rpy}"
      collision="$(arg collision_gripper)"
      ros2_control="$(arg ros2_control)"
      ros2_control_plugin="$(arg ros2_control_plugin)"
      ros2_control_command_interface="$(arg ros2_control_command_interface)"
      gazebo_preserve_fixed_joint="$(arg gazebo_preserve_fixed_joint)"
     scale="${scale}"/>
  </xacro:if>

  <link name="panda_camera_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <visual>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <material name="blue"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
  </link>

  <joint name="panda_camera_fixed_joint" type="fixed">
    <parent link="${prefix_arm}${wrist_flange_name}"/>
    <child link="panda_camera_link"/>
    <origin xyz="0.035 0 0.05" rpy="3.14159 4.71239 0"/> <!-- Adjust position as needed -->
  </joint>

  <gazebo reference="panda_camera_link">
    <sensor name="panda_depth_camera" type="depth_camera">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <visualize>1</visualize>
      <gz_frame_id>panda_camera_link</gz_frame_id>
      <camera>
        <horizontal_fov>1.047</horizontal_fov> <!-- ~60 degrees -->
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>5.0</far>
        </clip>
      </camera>
    </sensor>
    <sensor name="panda_rgb_camera" type="camera">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <visualize>1</visualize>
      <gz_frame_id>panda_camera_link</gz_frame_id>
      <camera>
        <horizontal_fov>1.047</horizontal_fov> <!-- ~60 degrees -->
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>5.0</far>
        </clip>
      </camera>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
      <render_engine>ogre2</render_engine>
    </plugin>
    <plugin
        filename="ignition-gazebo-scene-broadcaster-system"
        name="ignition::gazebo::systems::SceneBroadcaster">
    </plugin>
    <material name="blue">
      <color rgba="0 0 1 1"/>
    </material>
  </gazebo>

  <!-- Gazebo - ROS 2 control (Ignition) -->
  <xacro:if value="$(arg ros2_control)">
    <xacro:if value="${'gz' in '$(arg ros2_control_plugin)'}">
      <xacro:ign_ros2_control controller_parameters="$(arg ros2_controller_parameters)"/>
    </xacro:if>
  </xacro:if>

</robot>
